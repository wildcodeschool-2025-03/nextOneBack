CREATE TABLE Role (
id INT UNSIGNED PRIMARY KEY NOT NULL,
name VARCHAR(150) NOT NULL
);

CREATE TABLE User (
id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
firstname VARCHAR(150) NOT NULL,
name VARCHAR(150) NOT NULL,
pseudo VARCHAR(150) NOT NULL UNIQUE,
email VARCHAR(200) NOT NULL UNIQUE,
password VARCHAR(250) NOT NULL,
registration_date DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
registration BOOLEAN,
avatar_url TEXT NULL,
score_board INT NULL,
credits INT NULL,
historical_game TEXT NULL,
deleted_at DATETIME DEFAULT NULL,
id_role INT UNSIGNED NOT NULL DEFAULT 1,
FOREIGN KEY (id_role) REFERENCES Role(id)
);

CREATE TABLE Game (
id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY NOT NULL,
name VARCHAR(150) NOT NULL,
description TEXT NULL,
category VARCHAR(100) NOT NULL,
available_online BOOLEAN,
available_maintenance BOOLEAN,
images VARCHAR(255),
alt VARCHAR(255)
);

CREATE TABLE Contact (
id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
id_user INT UNSIGNED NOT NULL,
sujet VARCHAR(200) NOT NULL,
message TEXT NOT NULL,
date_message DATE NOT NULL,
status VARCHAR(100) NOT NULL DEFAULT 'non lu',
FOREIGN KEY (id_user) REFERENCES User(id)
);

CREATE TABLE Price_lot (
id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY NOT NULL,
name VARCHAR(150) NOT NULL,
description TEXT NULL,
Cost_point INT NOT NULL,
stock INT NOT NULL,
available_online BOOLEAN,
available_in_arcade BOOLEAN
);

CREATE TABLE Favorite (
id_user INT UNSIGNED NOT NULL,
id_game INT UNSIGNED NOT NULL,
PRIMARY KEY (id_user, id_game),
FOREIGN KEY (id_user) REFERENCES User(id),
FOREIGN KEY (id_game) REFERENCES Game(id)
);

CREATE TABLE Inventory (
id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
id_user INT UNSIGNED NOT NULL,
id_price_lot INT UNSIGNED NOT NULL,
FOREIGN KEY (id_user) REFERENCES User(id),
FOREIGN KEY (id_price_lot) REFERENCES Price_lot(id)
);

CREATE TABLE Echange (
id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
id_sender INT UNSIGNED NOT NULL,
id_receiver INT UNSIGNED NOT NULL,
exchange_date DATE NOT NULL,
exchange_state VARCHAR(100) NOT NULL,
quantity INT NOT NULL,
id_price_lot INT UNSIGNED NOT NULL,
FOREIGN KEY (id_sender) REFERENCES User(id),
FOREIGN KEY (id_receiver) REFERENCES User(id),
FOREIGN KEY (id_price_lot) REFERENCES Price_lot(id)
);

CREATE TABLE Party (
  id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT NOT NULL,
  id_user INT UNSIGNED NOT NULL,
  FOREIGN KEY (id_user) REFERENCES User(id),
  id_game INT UNSIGNED NOT NULL,
  FOREIGN KEY (id_game) REFERENCES Game(id),
  score INT NULL,
  date_game DATE NOT NULL,
  duration TIME NULL
);

CREATE TABLE Ranking (
id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
id_game INT UNSIGNED NOT NULL,
score INT NOT NULL,
date_enregistrement DATE NOT NULL,
FOREIGN KEY (id_game) REFERENCES Game(id)
);

CREATE TABLE Tarifs (
id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
title VARCHAR(100) NOT NULL,
subtitle VARCHAR(100),
price INT UNSIGNED NOT NULL DEFAULT 0
);

CREATE TABLE Event (
  id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  title VARCHAR(150) NOT NULL,
  description TEXT,
  date DATETIME NOT NULL,
  id_user INT UNSIGNED NOT NULL,
  participant_count INT UNSIGNED DEFAULT 0,
  FOREIGN KEY (id_user) REFERENCES User(id)
);

CREATE TABLE Event_User (
  id_event INT UNSIGNED NOT NULL,
  id_user INT UNSIGNED NOT NULL,
  PRIMARY KEY (id_event, id_user),
  FOREIGN KEY (id_event) REFERENCES Event(id) ON DELETE CASCADE,
  FOREIGN KEY (id_user) REFERENCES User(id) ON DELETE CASCADE
);
